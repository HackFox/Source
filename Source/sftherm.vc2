*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="sftherm.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS sfprogressbar AS sfcontainer OF "sfctrls.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpBar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape17" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape18" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape19" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape20" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape21" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape22" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape23" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape24" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape25" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape26" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape27" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Sfshape28" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: update		&& Updates the progress bar
		*p: nmaxwidth		&& The initial width of the bar
		*p: npercent		&& The last percentage of the progress meter
	*</DefinedPropArrayMethod>

	PROTECTED nmaxwidth,npercent
	Height = 22
	Name = "sfprogressbar"
	nmaxwidth = 0		&& The initial width of the bar
	npercent = 0		&& The last percentage of the progress meter
	Width = 346

	ADD OBJECT 'Sfshape1' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 10, ;
		Name = "Sfshape1", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape10' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 118, ;
		Name = "Sfshape10", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape11' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 130, ;
		Name = "Sfshape11", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape12' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 142, ;
		Name = "Sfshape12", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape13' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 154, ;
		Name = "Sfshape13", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape14' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 166, ;
		Name = "Sfshape14", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape15' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 178, ;
		Name = "Sfshape15", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape16' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 190, ;
		Name = "Sfshape16", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape17' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 202, ;
		Name = "Sfshape17", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape18' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 214, ;
		Name = "Sfshape18", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape19' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 226, ;
		Name = "Sfshape19", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape2' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 22, ;
		Name = "Sfshape2", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape20' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 238, ;
		Name = "Sfshape20", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape21' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 250, ;
		Name = "Sfshape21", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape22' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 262, ;
		Name = "Sfshape22", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape23' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 274, ;
		Name = "Sfshape23", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape24' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 286, ;
		Name = "Sfshape24", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape25' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 298, ;
		Name = "Sfshape25", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape26' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 310, ;
		Name = "Sfshape26", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape27' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 322, ;
		Name = "Sfshape27", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape28' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 334, ;
		Name = "Sfshape28", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape3' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 34, ;
		Name = "Sfshape3", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape4' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 46, ;
		Name = "Sfshape4", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape5' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 58, ;
		Name = "Sfshape5", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape6' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 70, ;
		Name = "Sfshape6", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape7' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 82, ;
		Name = "Sfshape7", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape8' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 94, ;
		Name = "Sfshape8", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'Sfshape9' AS sfshape WITH ;
		BorderColor = 192,192,192, ;
		Height = 22, ;
		Left = 106, ;
		Name = "Sfshape9", ;
		SpecialEffect = 1, ;
		Top = 0, ;
		Width = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />

	ADD OBJECT 'shpBar' AS sfshape WITH ;
		BorderStyle = 0, ;
		FillColor = 0,0,128, ;
		FillStyle = 0, ;
		Height = 20, ;
		Left = 0, ;
		Name = "shpBar", ;
		Top = 1, ;
		Width = 346
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="shape" />
	
	PROCEDURE about
		*==============================================================================
		* Class:					SFProgressBar
		* Based On:					SFContainer
		* Purpose:					Displays a progress bar
		* Author:					Doug Hennig
		* Copyright:				(c) 1996 Stonefield Systems Group Inc.
		* Last revision:			04/13/98
		* Include file:				none
		* Contains:					shpBar (SFShape)
		*							SFShape* (28 SFShapes)
		*
		* Changes in "Based On" class properties:
		*	SFThermometer:
		*		Height:				22
		*		Width:				346
		*	shpBar:
		*		BorderStyle:		0-Transparent
		*		FillColor:			0,0,128 (dark blue)
		*		FilStyle:			0-Solid
		*		Height:				20
		*		Width:				346
		*	SFShape*:
		*		BorderColor:		192,192,192
		*		Height:				22
		*		SpecialEffect:		1-Plain
		*		Width:				2
		*
		* Changes in "Based On" class methods:
		*	Init:					save the bar width to nMaxWidth and then set it to
		*							0
		*
		* Custom public properties added:
		*	None
		*
		* Custom protected properties added:
		*	nMaxWidth:				the initial width of the bar
		*	nPercent:				the last percentage of the progress meter
		*
		* Custom public methods added:
		*	Update:					update the progress meter to a new value
		*
		* Custom protected methods added:
		*	None
		*==============================================================================
		
	ENDPROC

	PROCEDURE Init
		* Save the bar width and then set it to 0.
		
		local loControl
		with This
			.nMaxWidth    = .shpBar.Width
			.shpBar.Width = 0
		
		* Set the border color of the lines to match the form's background.
		
			for each loControl in .Controls
				if upper(loControl.Name) = 'SFSHAPE'
					loControl.BorderColor = Thisform.BackColor
				endif upper(loControl.Name) = 'SFSHAPE'
			next loControl
		endwith
		
	ENDPROC

	PROCEDURE update		&& Updates the progress bar
		* Update the progress bar with a new value.
		
		lparameters tnCurrent
		local lnPercent, ;
			lnWidth
		
		* Don't let the percentage go over 100% or under 0%.
		
		with This
			lnPercent = max(min(tnCurrent, 100), 0)
		
		* If the percentage has changed, store it and adjust the bar width.
		
			if lnPercent <> .nPercent
				.nPercent     = lnPercent
				lnWidth       = lnPercent/100 * .nMaxWidth
				.shpBar.Width = int((lnWidth - 1)/12) * 12 + 1
			endif lnPercent = .nPercent
		
		* Use a DOEVENTS to ensure the window is updated.
		
			doevents
		endwith
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sfprogressform AS sfform OF "sfctrls.vcx" 		&& Displays a progress thermometer
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oThermometer" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: ccancelproperty_access
		*m: ccancelproperty_assign
		*m: lpasspercent_access
		*m: lpasspercent_assign
		*m: setmaximum		&& Sets the maximum value for the thermometer bar
		*m: settitle		&& Sets the caption for the title label
		*m: update		&& Updates the progress meter
		*p: ccancelproperty		&& The name of the property (including the complete reference to the object) or variable to set to .T. when the Cancel button is clicked
		*p: lpasspercent		&& .T. if the value passed to the Update method is in percent or .F. if it's an absolute value
	*</DefinedPropArrayMethod>

	Caption = "Progress"
	ccancelproperty = 		&& The name of the property (including the complete reference to the object) or variable to set to .T. when the Cancel button is clicked
	DoCreate = .T.
	Height = 76
	lpasspercent = .F.		&& .T. if the value passed to the Update method is in percent or .F. if it's an absolute value
	MaxButton = .F.
	MinButton = .F.
	Name = "sfprogressform"
	Width = 440

	ADD OBJECT 'oThermometer' AS sfthermometer WITH ;
		Name = "oThermometer", ;
		cmdCancel.Name = "cmdCancel", ;
		lblPercent.Name = "lblPercent", ;
		lblTask.Name = "lblTask", ;
		lblTitle.Name = "lblTitle", ;
		oProgressBar.Name = "oProgressBar", ;
		oProgressBar.Sfshape1.Name = "Sfshape1", ;
		oProgressBar.Sfshape10.Name = "Sfshape10", ;
		oProgressBar.Sfshape11.Name = "Sfshape11", ;
		oProgressBar.Sfshape12.Name = "Sfshape12", ;
		oProgressBar.Sfshape13.Name = "Sfshape13", ;
		oProgressBar.Sfshape14.Name = "Sfshape14", ;
		oProgressBar.Sfshape15.Name = "Sfshape15", ;
		oProgressBar.Sfshape16.Name = "Sfshape16", ;
		oProgressBar.Sfshape17.Name = "Sfshape17", ;
		oProgressBar.Sfshape18.Name = "Sfshape18", ;
		oProgressBar.Sfshape19.Name = "Sfshape19", ;
		oProgressBar.Sfshape2.Name = "Sfshape2", ;
		oProgressBar.Sfshape20.Name = "Sfshape20", ;
		oProgressBar.Sfshape21.Name = "Sfshape21", ;
		oProgressBar.Sfshape22.Name = "Sfshape22", ;
		oProgressBar.Sfshape23.Name = "Sfshape23", ;
		oProgressBar.Sfshape24.Name = "Sfshape24", ;
		oProgressBar.Sfshape25.Name = "Sfshape25", ;
		oProgressBar.Sfshape26.Name = "Sfshape26", ;
		oProgressBar.Sfshape27.Name = "Sfshape27", ;
		oProgressBar.Sfshape28.Name = "Sfshape28", ;
		oProgressBar.Sfshape3.Name = "Sfshape3", ;
		oProgressBar.Sfshape4.Name = "Sfshape4", ;
		oProgressBar.Sfshape5.Name = "Sfshape5", ;
		oProgressBar.Sfshape6.Name = "Sfshape6", ;
		oProgressBar.Sfshape7.Name = "Sfshape7", ;
		oProgressBar.Sfshape8.Name = "Sfshape8", ;
		oProgressBar.Sfshape9.Name = "Sfshape9", ;
		oProgressBar.shpBar.Name = "shpBar"
		*< END OBJECT: ClassLib="sftherm.vcx" BaseClass="container" />
	
	PROCEDURE ccancelproperty_access
		return This.oThermometer.cCancelProperty
		
	ENDPROC

	PROCEDURE ccancelproperty_assign
		lparameters tcNewValue
		This.oThermometer.cCancelProperty = tcNewValue
		
	ENDPROC

	PROCEDURE lpasspercent_access
		return This.oThermometer.lPassPercent
		
	ENDPROC

	PROCEDURE lpasspercent_assign
		lparameters tlNewValue
		This.oThermometer.lPassPercent = tlNewValue
		
	ENDPROC

	PROCEDURE setmaximum		&& Sets the maximum value for the thermometer bar
		lparameters tnMaximum
		This.oThermometer.SetMaximum(tnMaximum)
		
	ENDPROC

	PROCEDURE settitle		&& Sets the caption for the title label
		lparameters tcTitle
		This.oThermometer.SetTitle(tcTitle)
		
	ENDPROC

	PROCEDURE Show
		lparameters tnStyle
		with This
			.oThermometer.Show()
			.Width = .oThermometer.Width
		endwith
		if pcount() = 0
			dodefault()
		else
			dodefault(tnStyle)
		endif pcount() = 0
		
	ENDPROC

	PROCEDURE update		&& Updates the progress meter
		lparameters tnCurrent, ;
			tcTask
		
		* Ensure we're visible, then update the thermometer bar.
		
		with This
			if not .Visible
				.Show()
			endif not .Visible
			.oThermometer.Update(tnCurrent, tcTask)
		endwith
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sfthermometer AS sfcontainer OF "sfctrls.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblPercent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oProgressBar" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: cancelprocess		&& Cancels the process by setting the property or variable specified in cCancelProperty to .T.
		*m: checkcancel		&& Checks to see if the Cancel button has been pressed
		*m: ismouseovercancel		&& Returns .T. if the mouse is over the Cancel button
		*m: setmaximum		&& Sets the maximum value for the thermometer bar
		*m: settitle		&& Sets the caption for the title label
		*m: show		&& Displays the progress meter
		*m: update		&& Updates the progress meter
		*p: ccancelproperty		&& The name of the property (including the complete reference to the object) or variable to set to .T. when the Cancel button is clicked
		*p: lpasspercent		&& .T. if the value passed to the Update method is in percent or .F. if it's an absolute value
		*p: nmax		&& The maximum value
		*p: nmin		&& The minimum value
	*</DefinedPropArrayMethod>

	PROTECTED nmax,nmin
	ccancelproperty = 		&& The name of the property (including the complete reference to the object) or variable to set to .T. when the Cancel button is clicked
	Height = 76
	lpasspercent = .F.		&& .T. if the value passed to the Update method is in percent or .F. if it's an absolute value
	Name = "sfthermometer"
	nmax = 100		&& The maximum value
	nmin = 0		&& The minimum value
	Width = 440

	ADD OBJECT 'cmdCancel' AS sfcommandbutton WITH ;
		Caption = "Cancel", ;
		Height = 27, ;
		Left = 370, ;
		Name = "cmdCancel", ;
		Top = 40, ;
		Width = 64
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblPercent' AS sflabel WITH ;
		Caption = "0%", ;
		Left = 414, ;
		Name = "lblPercent", ;
		Top = 5, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblTask' AS sflabel WITH ;
		Caption = "", ;
		Height = 17, ;
		Left = 5, ;
		Name = "lblTask", ;
		Top = 20, ;
		Width = 2, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblTitle' AS sflabel WITH ;
		Caption = "Current Progress...", ;
		Height = 17, ;
		Left = 5, ;
		Name = "lblTitle", ;
		Top = 5, ;
		Width = 106, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="sfctrls.vcx" BaseClass="label" />

	ADD OBJECT 'oProgressBar' AS sfprogressbar WITH ;
		Left = 5, ;
		Name = "oProgressBar", ;
		Top = 45, ;
		Sfshape1.Name = "Sfshape1", ;
		Sfshape10.Name = "Sfshape10", ;
		Sfshape11.Name = "Sfshape11", ;
		Sfshape12.Name = "Sfshape12", ;
		Sfshape13.Name = "Sfshape13", ;
		Sfshape14.Name = "Sfshape14", ;
		Sfshape15.Name = "Sfshape15", ;
		Sfshape16.Name = "Sfshape16", ;
		Sfshape17.Name = "Sfshape17", ;
		Sfshape18.Name = "Sfshape18", ;
		Sfshape19.Name = "Sfshape19", ;
		Sfshape2.Name = "Sfshape2", ;
		Sfshape20.Name = "Sfshape20", ;
		Sfshape21.Name = "Sfshape21", ;
		Sfshape22.Name = "Sfshape22", ;
		Sfshape23.Name = "Sfshape23", ;
		Sfshape24.Name = "Sfshape24", ;
		Sfshape25.Name = "Sfshape25", ;
		Sfshape26.Name = "Sfshape26", ;
		Sfshape27.Name = "Sfshape27", ;
		Sfshape28.Name = "Sfshape28", ;
		Sfshape3.Name = "Sfshape3", ;
		Sfshape4.Name = "Sfshape4", ;
		Sfshape5.Name = "Sfshape5", ;
		Sfshape6.Name = "Sfshape6", ;
		Sfshape7.Name = "Sfshape7", ;
		Sfshape8.Name = "Sfshape8", ;
		Sfshape9.Name = "Sfshape9", ;
		shpBar.Name = "shpBar"
		*< END OBJECT: ClassLib="sftherm.vcx" BaseClass="container" />
	
	PROCEDURE about
		*==============================================================================
		* Class:					SFThermometer
		* Based On:					SFContainer
		* Purpose:					Displays a thermometer
		* Author:					Doug Hennig
		* Copyright:				(c) 1996 Stonefield Systems Group Inc.
		* Last revision:			04/21/99
		* Include file:				none
		* Contains:					shpBar (SFShape)
		*							lblPercent (SFLabel)
		*							lblTitle (SFLabel)
		*							lblTask (SFLabel)
		*							cmdCancel (SFCommandButton)
		*							SFShape* (28 SFShapes)
		*
		* Changes in "Based On" class properties:
		*	SFThermometer:
		*		Height:				76
		*		Width:				440
		*	shpBar:
		*		BorderStyle:		0-Transparent
		*		FillColor:			0,0,128 (dark blue)
		*		FilStyle:			0-Solid
		*		Height:				20
		*		Width:				346
		*	lblPercent:
		*		Caption:			0%
		*	lblTitle:
		*		Caption				Current Progress...
		*	lblTask:
		*		Caption:			none
		*	cmdCancel:
		*		Caption:			Cancel
		*	SFShape*:
		*		BorderColor:		192,192,192
		*		Height:				22
		*		SpecialEffect:		1-Plain
		*		Width:				2
		*
		* Changes in "Based On" class methods:
		*	Init:					call Show if we're already visible
		*
		* Custom public properties added:
		*	cCancelProperty:		the name of the property (including the complete
		*							reference to the object) or variable to set to .T.
		*							when the Cancel button is clicked. If this property
		*							isn't filled in, the Cancel button is hidden
		*	lPassPercent:			.T. if the value passed to the Update method is in
		*							percent or .F. if it's an absolute value
		*
		* Custom protected properties added:
		*	None
		*
		* Custom public methods added:
		*	CheckCancel:			checks to see if the Cancel button has been pressed
		*	SetMaximum:				sets the maximum value for the bar
		*	SetTitle:				sets the caption for the title label
		*	Show:					hide the Cancel button if necessary
		*	Update:					update the progress meter to a new value
		*
		* Custom protected methods added:
		*	CancelProcess:			cancels the process by setting the property or
		*							variable specified in cCancelProperty to .T.
		*	IsMouseOverCancel:		returns .T. if the mouse is over the Cancel button
		*==============================================================================
		
	ENDPROC

	PROTECTED PROCEDURE cancelprocess		&& Cancels the process by setting the property or variable specified in cCancelProperty to .T.
		* Cancel the process by setting the property or variable specified in
		* cCancelProperty to .T.
		
		with This
			if not empty(.cCancelProperty) and type(.cCancelProperty) = 'L'
				store .T. to (.cCancelProperty)
			endif not empty(.cCancelProperty) ...
		endwith
		
	ENDPROC

	PROTECTED PROCEDURE checkcancel		&& Checks to see if the Cancel button has been pressed
		* If the Cancel button is visible and the mouse is pressed, see if the user is
		* clicking on the Cancel button. If so, use DOEVENTS to allow the Cancel button
		* to appear to depress, then check to see if the user let up the mouse button
		* while still over the Cancel button. If so, call the CancelProcess method to
		* cancel the process. This is a roundabout way of doing it but is *much* faster
		* than using DOEVENTS and having code in the Click method of the button call
		* the CancelProcess method, because DOEVENTS really slows down processing.
		
		local llReturn
		llReturn = .F.
		with This
			if .cmdCancel.Visible and mdown() and .IsMouseOverCancel()
				doevents
				if .IsMouseOverCancel()
					llReturn = .T.
					.CancelProcess()
				endif .IsMouseOverCancel()
			endif .cmdCancel.Visible ...
		endwith
		return llReturn
		
	ENDPROC

	PROCEDURE Init
		* Call Show if we're already visible.
		
		if This.Visible and (type('This.Parent.Name') <> 'C' or This.Parent.Visible)
			This.Show()
		endif This.Visible ...
		
	ENDPROC

	PROTECTED PROCEDURE ismouseovercancel		&& Returns .T. if the mouse is over the Cancel button
		* Returns .T. if the mouse is over the Cancel button.
		
		local loControl
		loControl = sys(1270)
		return type('loControl') = 'O' and not isnull(loControl) and ;
			loControl.Name = 'cmdCancel' and loControl.Parent.Name = This.Name
		
	ENDPROC

	PROCEDURE setmaximum		&& Sets the maximum value for the thermometer bar
		* If the maximum value was passed, save it.
		
		lparameters tnMaximum
		if type('tnMaximum') $ 'NIFYB' and tnMaximum > This.nMin
			This.nMax = int(tnMaximum)
		endif type('tnMaximum') $ 'NIFYB' ...
		
	ENDPROC

	PROCEDURE settitle		&& Sets the caption for the title label
		* Set the title for title label.
		
		lparameters tcTitle
		if type('tcTitle') = 'C'
			This.lblTitle.Caption = tcTitle
		endif type('tcTitle') = 'C'
		
	ENDPROC

	PROCEDURE show		&& Displays the progress meter
		* Display the progress meter: if cCancelProperty isn't filled in, hide the
		* Cancel button. Put the Percent label in the appropriate spot.
		
		with This
			if empty(.cCancelProperty)
				.cmdCancel.Visible = .F.
				.lblPercent.Left   = .oProgressBar.Left + .oProgressBar.Width - ;
					.lblPercent.Width
				.Width             = 2 * .oProgressBar.Left + .oProgressBar.Width
			endif empty(.cCancelProperty)
			.Visible = .T.
		endwith
		
	ENDPROC

	PROCEDURE update		&& Updates the progress meter
		* Update the progress meter with a new value.
		
		lparameters tnCurrent, ;
			tcTask
		local lnPercent
		
		* Don't let the percentage go over the maximum or under the minimum.
		
		with This
			if .lPassPercent
				lnPercent = max(min(tnCurrent, .nMax), .nMin)
			else
				lnPercent = max(min(int(tnCurrent/.nMax * 100), 100), 0)
			endif .lPassPercent
		
		* If the task to display was passed, display it.
		
			if not empty(tcTask) and not .lblTask.Caption == tcTask
				.lblTask.Caption = tcTask
			endif not empty(tcTask) ...
		
		* Update the progress meter and label caption.
		
			.lblPercent.Caption = ltrim(str(lnPercent)) + '%'
			.oProgressBar.Update(lnPercent)
		
		* Let's ensure we're visible.
		
			if not .Visible
				.Show()
			endif not .Visible
		
		* See if the Cancel button has been pressed.
		
			.CheckCancel()
		endwith
		
	ENDPROC

	PROCEDURE lblPercent.Init
		This.Alignment = 1
		
	ENDPROC

ENDDEFINE
